{"version":3,"sources":["components/Charts/Chart.js","utils/API.js","pages/Forecast.js","components/Navbar/Navbar.js","pages/Home/Home.js","components/Map.js","pages/MapPage.js","pages/Home/HomeCH.js","App.js","index.js"],"names":["Chart","props","data","useState","tempText","setTempText","humidityText","setHumidityText","rainfallText","setRainfallText","cloudText","setCloudText","Grid","container","direction","justify","alignItems","Button","className","onClick","classname","item","xs","sm","width","height","margin","top","right","bottom","left","type","dataKey","stroke","strokeDasharray","wrapperStyle","backgroundColor","border","borderRadius","lineHeight","fill","barSize","lat","lon","axios","address","Forecast","setAddress","setData","noValidate","autoComplete","TextField","id","label","variant","value","onChange","event","target","console","log","preventDefault","API","then","res","location","display_name","results","response","j","object","properties","timeseries","nextNineHours","push","time","Date","getHours","Celcius","instant","details","air_temperature","clouds","cloud_area_fraction","Humidity","relative_humidity","mm","next_1_hours","precipitation_amount","Nav","spacing","to","Home","Map","latitude","longitude","zoom","viewport","setViewport","trashIsToggled","setTrashIsToggled","trashToggle","useCallback","bikeIsToggled","setBikeIsToggled","bikeToggle","libIsToggled","setLibIsToggled","libToggle","selectedLib","setSelectedLib","mapboxApiAccessToken","mapStyle","onViewportChange","nextViewport","cycleData","layout","paint","trashData","libraryData","features","map","lib","geometry","coordinates","offsetLeft","offsetTop","e","ImportContacts","onClose","navn","adresse","post_nr","postdistrikt","link","MapPage","HomeCH","App","alignment","basename","exact","path","render","WebFont","load","google","families","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d35f952a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { LineChart, Line, BarChart, Bar, Legend, CartesianGrid, YAxis, XAxis, Tooltip } from \"recharts\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./Chart.css\";\r\n\r\nfunction Chart(props){\r\n\r\n    // Inherited data from Forecast page\r\n    let data = props.data;\r\n\r\n    // Setting states of the text elements on the page so they may be translated\r\n    const [tempText, setTempText] = useState(\"Hourly Temperature\");\r\n    const [humidityText, setHumidityText] = useState(\"Hourly Humidity\");\r\n    const [rainfallText, setRainfallText] = useState(\"Precipitation\");\r\n    const [cloudText, setCloudText] = useState(\"% Cloud Coverage\");\r\n\r\n    return(\r\n    <Grid container\r\n    direction=\"row\"\r\n    justify=\"space-around\"\r\n    alignItems=\"stretch\"\r\n    >\r\n        <Grid container\r\n        direction=\"row\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"flex-start\">\r\n            <Button className=\"toggle\" onClick={() => { setTempText(\"Hourly Temperature\"); setHumidityText(\"Hourly Humidity\"); setRainfallText(\"Precipitation\"); setCloudText(\"% Cloud Coverage\") }}>EN</Button>\r\n            <Button classname=\"toggle\" onClick={() => { setTempText(\"溫度\"); setHumidityText(\"濕度\"); setRainfallText(\"降雨量\"); setCloudText(\"雲量\") }}>中文</Button>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n            <br></br>\r\n            <Grid item xs={12} sm={9}></Grid>\r\n            <Grid item xs={12} sm={3}>\r\n            \r\n            </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n        <p>{tempText}</p>\r\n            <LineChart width={600} height={300} data={data} margin={{ top: 40, right: 20, bottom: 5, left: 0 }}>\r\n            <Line type=\"monotone\" dataKey=\"Celcius\" stroke=\"#0ba4e0\" />\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis dataKey=\"time\" stroke=\"#8884d8\" />\r\n            <YAxis />\r\n            <Legend width={100} wrapperStyle={{ bottom: 95, right: 20, backgroundColor: '#f5f5f5', border: '1px solid #d5d5d5', borderRadius: 3, lineHeight: '40px' }} />\r\n            <Tooltip />\r\n            </LineChart>\r\n            \r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n        <p>{humidityText}</p>\r\n            <BarChart width={600} height={300} data={data}>\r\n            <XAxis dataKey=\"time\" stroke=\"#8884d8\" />\r\n            <YAxis />\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <Bar dataKey=\"Humidity\" fill=\"#b500b5\" barSize={30} />\r\n            <Tooltip />\r\n            </BarChart>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n        <p>{cloudText}</p>\r\n            <BarChart width={600} height={300} data={data}>\r\n            <XAxis dataKey=\"time\" stroke=\"#8884d8\" />\r\n            <YAxis />\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <Bar dataKey=\"clouds\" fill=\"#690069\" barSize={30} />\r\n            <Tooltip />\r\n            </BarChart>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={6}>\r\n        <p>{rainfallText}</p>\r\n            <LineChart width={600} height={300} data={data} margin={{ top: 40, right: 20, bottom: 5, left: 0 }}>\r\n            <Line type=\"monotone\" dataKey=\"mm\" stroke=\"#0ba4e0\" />\r\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n            <XAxis dataKey=\"time\" stroke=\"#8884d8\" />\r\n            <YAxis />\r\n            <Legend width={100} wrapperStyle={{ bottom: 95, right: 20, backgroundColor: '#f5f5f5', border: '1px solid #d5d5d5', borderRadius: 3, lineHeight: '40px' }} />\r\n            <Tooltip />\r\n            </LineChart>\r\n            \r\n        </Grid>\r\n        \r\n       \r\n    </Grid>\r\n    )\r\n}\r\n\r\nexport default Chart;","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n    getForecast: function(lat, lon){\r\n        return axios({\r\n            \"method\": \"GET\",\r\n            \"url\": \"https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=\" + lat + \"&lon=\" + lon\r\n        })\r\n    },\r\n\r\n    getGeo: function(address){\r\n        return axios({\r\n            \"method\": \"GET\",\r\n            \"url\": \"https://eu1.locationiq.com/v1/search.php?key=\" + \"pk.daacd79a280a7387136127b77f8abb6d\" + \"&q=\" + address + \"&format=json\"\r\n        })\r\n    }\r\n\r\n}","import React, { useState } from \"react\";\r\nimport Chart from \"../components/Charts/Chart\";\r\nimport API from \"../utils/API\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Grid, TextField, Button } from \"@material-ui/core\";\r\n\r\nfunction Forecast(props) {\r\n\r\n    // props to be passed into geocode\r\n    const [address, setAddress] = useState(\"\");\r\n    // props for data to be passed to Charts\r\n    const [data, setData] = useState([]);\r\n\r\n    function handleInputChange(event) {\r\n        setAddress(event.target.value);\r\n        console.log(address);\r\n        \r\n    }\r\n\r\n    function handleFormSubmit(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        let lat;\r\n        let lon;\r\n\r\n        API.getGeo(address)\r\n            .then(res => {\r\n                console.log(res.data[0]);\r\n                // changes state to the lat/lon of the location\r\n                let location = res.data[0].display_name;\r\n                lat = res.data[0].lat;\r\n                lon = res.data[0].lon;\r\n                setAddress(location)\r\n                console.log(location)\r\n                console.log(lat+\" \"+lon);\r\n            })\r\n            .then(results => {\r\n\r\n                 // call to the weather API\r\n                 API.getForecast(lat, lon).then(response => {\r\n        \r\n                    // created an object for the response\r\n                    let object = response.data.properties.timeseries;\r\n        \r\n                    // initializing an array\r\n                    let nextNineHours = [];\r\n        \r\n                // only pushing 10 items in the array; temp, humidity, cloud coverage, and rainfall from the response to pass as props to Charts\r\n                var j;\r\n                for (j=0;j<10;j++){\r\n                    nextNineHours.push({time: new Date(object[j].time).getHours()+\":00\", Celcius: object[j].data.instant.details.air_temperature, clouds: object[j].data.instant.details.cloud_area_fraction, Humidity: object[j].data.instant.details.relative_humidity, mm: object[j].data.next_1_hours.details.precipitation_amount});\r\n                }\r\n        \r\n                setData(nextNineHours);\r\n                console.log(data)\r\n            });\r\n            })\r\n\r\n               \r\n            \r\n    };\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid>\r\n                <form noValidate autoComplete=\"off\">\r\n                <TextField id=\"outlined-basic\" label=\"Address\" variant=\"outlined\" \r\n                value={address}\r\n                onChange={handleInputChange}\r\n                id=\"place\"\r\n                />\r\n                <Button\r\n                type=\"submit\"\r\n                onClick={handleFormSubmit}\r\n                ><SearchIcon /></Button>\r\n                </form> \r\n            </Grid>\r\n\r\n            <Grid>\r\n                <Chart data={data} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Forecast;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport CloudIcon from \"@material-ui/icons/Cloud\";\r\nimport MapIcon from \"@material-ui/icons/Explore\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nfunction Nav(){\r\n    return(\r\n        <Grid\r\n        className=\"container\" \r\n        container \r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n        spacing={3}\r\n        >\r\n             \r\n            <Grid className=\"grid\" item xs={12}>\r\n                <Link className=\"link\" to=\"/\">\r\n                    <HomeIcon />\r\n                </Link>\r\n\r\n                <Link className=\"link\" to=\"/map\">\r\n                    <MapIcon />\r\n                </Link>\r\n\r\n                <Link className=\"link\" to=\"/weather\">\r\n                    <CloudIcon />\r\n                </Link>\r\n            </Grid>\r\n\r\n        </Grid>    \r\n    )\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(){\r\n    return (\r\n        <Grid container spacing={3}>\r\n\r\n            <Grid \r\n            container\r\n            justify=\"flex-end\"\r\n            alignItems=\"flex-end\">\r\n                <Link className=\"language\" to=\"/ch\">中文</Link>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n            </Grid>\r\n            <Grid className=\"title\" item xs={12}>København</Grid>\r\n            <Grid className=\"subtext\" item xs={12}><Link className=\"textLink\" to=\"/map\">Discover</Link> locations of waste baskets, local libraries，and hourly <Link className=\"textLink\" to=\"/weather\">weather</Link> data</Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState, useCallback } from \"react\";\r\nimport ReactMapGL, { Source, Layer, Marker, Popup } from \"react-map-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport * as trashData from \"./data/trash.json\";\r\nimport * as libraryData from \"./data/library.json\";\r\nimport * as cycleData from \"./data/cycle.json\";\r\nimport { ButtonGroup, Button } from \"@material-ui/core\"\r\nimport { DirectonsBike, ImportContacts, Delete } from \"@material-ui/icons\";\r\n\r\nconst MAPBOX_TOKEN = \"pk.eyJ1Ijoic2FyYWhzaGVhMTIiLCJhIjoiY2toZmxuaDM4MHFvdzJwcXBxbDd0cnF0MyJ9.kkp2ulqhOdhgwysy05DlOA\"\r\n\r\nfunction Map(){\r\n\r\n    // view for the map\r\n    const [viewport, setViewport] = useState({\r\n        width: 600,\r\n        height: 600,\r\n        latitude: 55.6761,\r\n        longitude: 12.5683,\r\n        zoom: 12\r\n    });\r\n\r\n    // method for displaying the trashcan layer on the map when clicked\r\n    const [trashIsToggled, setTrashIsToggled] = useState(false);\r\n    const trashToggle = useCallback(() => setTrashIsToggled(!trashIsToggled));\r\n\r\n    // method from displaying the cycling data\r\n    const [bikeIsToggled, setBikeIsToggled] = useState(false);\r\n    const bikeToggle = useCallback(() => setBikeIsToggled(!bikeIsToggled));\r\n\r\n    // method from displaying the library data\r\n    const [libIsToggled, setLibIsToggled] = useState(false);\r\n    const libToggle = useCallback(() => setLibIsToggled(!libIsToggled));\r\n\r\n    // state of the library that is clicked on to return the corresponding popup\r\n    const [selectedLib, setSelectedLib] = useState(null);\r\n\r\n    return (\r\n    <div>\r\n        <ReactMapGL \r\n        {...viewport}\r\n        width=\"100vw\"\r\n        height=\"100vh\"\r\n        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n        mapStyle=\"mapbox://styles/sarahshea12/ckhilnhdj0j8019noz4pvtd33\"\r\n        onViewportChange = {nextViewport => setViewport(nextViewport)}\r\n        >\r\n    \r\n        <button onClick={bikeToggle}>Bikes</button>\r\n        {bikeIsToggled ? (\r\n            <Source type=\"geojson\" data={cycleData.default}>\r\n            <Layer \r\n                id=\"line\"\r\n                type=\"line\"\r\n                layout= {{\r\n                    \"line-cap\": \"round\",\r\n                    \"line-join\": \"round\",\r\n                    \r\n                }}\r\n                paint= {{\r\n                    \"line-color\": \"#ff02ff\",\r\n                    \"line-width\": 3\r\n                }}>\r\n            </Layer>\r\n        </Source> \r\n        ) : null}\r\n        \r\n        <button onClick={trashToggle}>Trashcans</button>\r\n        {trashIsToggled ? (\r\n            <Source type=\"geojson\" data={trashData.default}>\r\n                <Layer \r\n                    id=\"marker\"\r\n                    type=\"symbol\"\r\n                    layout={{\"icon-image\": \"marker-15\"}}>\r\n                </Layer>\r\n            </Source> \r\n        ) : null}\r\n        \r\n        <button onClick={libToggle}>Libraries</button>\r\n        {libIsToggled ? (\r\n        libraryData.default.features.map((lib) => (\r\n        <Marker\r\n            latitude={lib.geometry.coordinates[1]}\r\n            longitude={lib.geometry.coordinates[0]}\r\n            offsetLeft={-20} offsetTop={-10}>\r\n                <Button \r\n                onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedLib(lib);\r\n                }}>{<ImportContacts />}</Button>\r\n        </Marker> \r\n        ))\r\n        ) : null}\r\n        {selectedLib ? (\r\n            <Popup \r\n                latitude={selectedLib.geometry.coordinates[1]}\r\n                longitude={selectedLib.geometry.coordinates[0]}\r\n                onClose={() => {\r\n                    setSelectedLib(null);\r\n                }}\r\n                >\r\n                <div>\r\n                    <h3>{selectedLib.properties.navn}</h3>\r\n                    <h3>{selectedLib.properties.adresse}</h3>\r\n                    <h3>DK-{selectedLib.properties.post_nr}, {selectedLib.properties.postdistrikt}</h3>\r\n                    <h3>{selectedLib.properties.link}</h3>\r\n                </div>\r\n            </Popup>\r\n        ) : null}\r\n        \r\n        </ReactMapGL>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Map;","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Map from \"../components/Map\";\r\n\r\nfunction MapPage(){\r\n\r\n    return (\r\n        <Map />     \r\n    )\r\n}\r\n\r\nexport default MapPage;","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nfunction HomeCH(){\r\n    return (\r\n        <Grid container spacing={3}>\r\n            \r\n            <Grid \r\n            container\r\n            justify=\"flex-end\"\r\n            alignItems=\"flex-end\">\r\n                <Grid item xs={12}>\r\n                    <br></br>\r\n                </Grid>\r\n                <Link className=\"language\" to=\"/\">EN</Link>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n            </Grid>\r\n\r\n            <Grid className=\"title\" item xs={12}>哥本哈根</Grid>\r\n\r\n            <Grid className=\"subtext\" item xs={12}>查看自行車道地圖，垃圾桶分佈，圖書館分佈，每小時天氣信息</Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default HomeCH;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Forecast from \"./pages/Forecast\";\nimport Nav from \"./components/Navbar/Navbar\";\nimport Home from \"./pages/Home/Home\";\nimport MapPage from \"./pages/MapPage\";\nimport HomeCH from \"./pages/Home/HomeCH\";\nimport Grid from \"@material-ui/core/Grid\";\n\nfunction App() {\n  return (\n    <Grid \n    container\n    direction=\"row\"\n    justify=\"flex-start\"\n    alignment=\"stretch\"\n    spacing={1}\n    >\n      <Router basename=\"/explore-copenhagen\">\n\n        <Grid xs={12}>\n          <Nav />\n        </Grid>\n\n        <Grid xs={12}>\n        <Switch>\n          <Route exact path=\"/\" render={() => (\n            <Home />\n          )}>\n          </Route>\n\n          <Route exact path=\"/ch\" render={() => (\n            <HomeCH />\n          )}>\n          </Route>\n\n          <Route exact path=\"/map\" render={() => (\n            <MapPage />\n          )}>\n          </Route>\n\n          <Route exact path=\"/weather\" render={() => (\n            <Forecast />\n          )}>\n          </Route>\n        </Switch>\n\n        </Grid>\n\n      </Router>\n\n    </Grid>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport WebFont from \"webfontloader\";\n\nWebFont.load({\n    google: {\n        families: ['Titillium Web:300,400,700', 'sans-serif']\n    }\n})\n\nReactDOM.render(\n<App />, document.getElementById('root')\n);\n\n\n  \n"],"sourceRoot":""}