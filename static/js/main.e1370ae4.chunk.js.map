{"version":3,"sources":["components/Charts/Chart.js","utils/API.js","pages/Forecast/Forecast.js","components/Navbar/Navbar.js","pages/Home/Home.js","components/Map/Map.js","pages/Home/HomeCH.js","App.js","index.js"],"names":["Chart","props","data","useState","tempText","setTempText","humidityText","setHumidityText","rainfallText","setRainfallText","cloudText","setCloudText","Button","className","onClick","classname","style","display","justifyContent","flexDirection","width","height","margin","top","right","bottom","left","type","dataKey","stroke","strokeDasharray","wrapperStyle","backgroundColor","border","borderRadius","lineHeight","fill","barSize","lat","lon","axios","address","Forecast","setAddress","setData","click","wasClicked","paddingTop","position","noValidate","autoComplete","TextField","id","label","variant","value","onChange","event","target","size","preventDefault","API","then","res","location","display_name","results","response","j","object","properties","timeseries","nextNineHours","push","time","Date","getHours","Celcius","instant","details","air_temperature","clouds","cloud_area_fraction","Humidity","relative_humidity","mm","next_1_hours","precipitation_amount","Nav","AppBar","background","Toolbar","to","Home","Map","latitude","longitude","zoom","viewport","setViewport","trashIsToggled","setTrashIsToggled","trashToggle","useCallback","bikeIsToggled","setBikeIsToggled","bikeToggle","libIsToggled","setLibIsToggled","libToggle","selectedLib","setSelectedLib","mapboxApiAccessToken","mapStyle","onViewportChange","nextViewport","Delete","trashData","paint","LocalLibrary","libraryData","features","map","lib","geometry","coordinates","offsetLeft","offsetTop","e","onClose","navn","adresse","post_nr","postdistrikt","DirectionsBike","cycleData","layout","HomeCH","App","basename","Paper","exact","path","render","WebFont","load","google","families","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e1370ae4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { LineChart, Line, BarChart, Bar, Legend, CartesianGrid, YAxis, XAxis, Tooltip } from \"recharts\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./Chart.css\";\r\n\r\nfunction Chart(props){\r\n\r\n    // Inherited data from Forecast page\r\n    let data = props.data;\r\n\r\n    // Setting states of the text elements on the page so they may be translated\r\n    const [tempText, setTempText] = useState(\"Hourly Temperature\");\r\n    const [humidityText, setHumidityText] = useState(\"Hourly Humidity\");\r\n    const [rainfallText, setRainfallText] = useState(\"Precipitation\");\r\n    const [cloudText, setCloudText] = useState(\"% Cloud Coverage\");\r\n\r\n    return(\r\n    <div>\r\n        <Button className=\"toggle\" onClick={() => { setTempText(\"Hourly Temperature\"); setHumidityText(\"Hourly Humidity\"); setRainfallText(\"Precipitation\"); setCloudText(\"% Cloud Coverage\") }}>EN</Button>\r\n        <Button classname=\"toggle\" onClick={() => { setTempText(\"溫度\"); setHumidityText(\"濕度\"); setRainfallText(\"降雨量\"); setCloudText(\"雲量\") }}>中文</Button>\r\n         \r\n        <div>\r\n            <div style={{display:\"flex\", justifyContent:\"space-around\"}}>\r\n                <div style={{flexDirection:\"column\"}}>\r\n                    <p>{tempText}</p>\r\n                    <LineChart width={600} height={300} data={data} margin={{ top: 40, right: 20, bottom: 5, left: 0 }}>\r\n                        <Line type=\"monotone\" dataKey=\"Celcius\" stroke=\"#004256\" />\r\n                        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n                        <XAxis dataKey=\"time\" stroke=\"#000000\" />\r\n                        <YAxis />\r\n                        <Legend width={100} wrapperStyle={{ bottom: 95, right: 20, backgroundColor: '#f5f5f5', border: '1px solid #d5d5d5', borderRadius: 3, lineHeight: '40px' }} />\r\n                        <Tooltip />\r\n                    </LineChart>\r\n                </div>\r\n            \r\n                <div style={{flexDirection:\"column\"}}>\r\n                    <p>{humidityText}</p>\r\n                    <BarChart width={600} height={300} data={data}>\r\n                        <XAxis dataKey=\"time\" stroke=\"#000000\" />\r\n                        <YAxis />\r\n                        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n                        <Bar dataKey=\"Humidity\" fill=\"#e6d15e\" barSize={30} />\r\n                        <Tooltip />\r\n                    </BarChart>\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{display:\"flex\", justifyContent:\"space-around\"}}>\r\n                <div style={{flexDirection:\"column\"}}>\r\n                    <p>{cloudText}</p>\r\n                    <BarChart width={600} height={300} data={data}>\r\n                        <XAxis dataKey=\"time\" stroke=\"#000000\" />\r\n                        <YAxis />\r\n                        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n                        <Bar dataKey=\"clouds\" fill=\"#8fc7cc\" barSize={30} />\r\n                        <Tooltip />\r\n                    </BarChart>\r\n                </div>\r\n\r\n                <div style={{flexDirection:\"column\"}}>\r\n                    <p>{rainfallText}</p>\r\n                    <LineChart width={600} height={300} data={data} margin={{ top: 40, right: 20, bottom: 5, left: 0 }}>\r\n                        <Line type=\"monotone\" dataKey=\"mm\" stroke=\"#004256\" />\r\n                        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n                        <XAxis dataKey=\"time\" stroke=\"#000000\" />\r\n                        <YAxis />\r\n                        <Legend width={100} wrapperStyle={{ bottom: 95, right: 20, backgroundColor: '#f5f5f5', border: '1px solid #d5d5d5', borderRadius: 3, lineHeight: '40px' }} />\r\n                        <Tooltip />\r\n                    </LineChart>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n    getForecast: function(lat, lon){\r\n        return axios({\r\n            \"method\": \"GET\",\r\n            \"url\": \"https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=\" + lat + \"&lon=\" + lon\r\n        })\r\n    },\r\n\r\n    getGeo: function(address){\r\n        return axios({\r\n            \"method\": \"GET\",\r\n            \"url\": \"https://eu1.locationiq.com/v1/search.php?key=\" + \"pk.daacd79a280a7387136127b77f8abb6d\" + \"&q=\" + address + \"&format=json\"\r\n        })\r\n    }\r\n\r\n}","import React, { useState } from \"react\";\r\nimport Chart from \"../../components/Charts/Chart\";\r\nimport API from \"../../utils/API\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport \"./Forecast.css\";\r\n\r\nfunction Forecast(props) {\r\n\r\n    // props to be passed into geocode\r\n    const [address, setAddress] = useState(\"\");\r\n    // props for data to be passed to Charts\r\n    const [data, setData] = useState([]);\r\n    // prop for when the charts should populate, only when the search button is clicked\r\n    const [click, wasClicked] = useState(false);\r\n\r\n    function handleInputChange(event) {\r\n        setAddress(event.target.value);\r\n    }\r\n\r\n    function handleFormSubmit(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        let lat;\r\n        let lon;\r\n\r\n        API.getGeo(address)\r\n            .then(res => {\r\n        \r\n                // changes state to the lat/lon of the location\r\n                let location = res.data[0].display_name;\r\n                lat = res.data[0].lat;\r\n                lon = res.data[0].lon;\r\n                setAddress(location)\r\n            })\r\n            .then(results => {\r\n\r\n                 // call to the weather API\r\n                 API.getForecast(lat, lon).then(response => {\r\n        \r\n                    // created an object for the response\r\n                    let object = response.data.properties.timeseries;\r\n        \r\n                    // initializing an array\r\n                    let nextNineHours = [];\r\n        \r\n                // only pushing 10 items in the array; temp, humidity, cloud coverage, and rainfall from the response to pass as props to Charts\r\n                var j;\r\n                for (j=0;j<10;j++){\r\n                    nextNineHours.push({time: new Date(object[j].time).getHours()+\":00\", Celcius: object[j].data.instant.details.air_temperature, clouds: object[j].data.instant.details.cloud_area_fraction, Humidity: object[j].data.instant.details.relative_humidity, mm: object[j].data.next_1_hours.details.precipitation_amount});\r\n                }\r\n        \r\n                // sets the prop data equal to this object\r\n                setData(nextNineHours);\r\n                wasClicked(true);\r\n            });\r\n            })\r\n\r\n               \r\n            \r\n    };\r\n\r\n    return (\r\n        <div style={{paddingTop: 65}}>\r\n\r\n            <div style={{position:\"absolute\", right:10}}>\r\n                <form noValidate autoComplete=\"off\">\r\n                    <TextField id=\"outlined-basic\" label=\"Address\" variant=\"outlined\" \r\n                    value={address}\r\n                    onChange={handleInputChange}\r\n                    id=\"place\"\r\n                    />\r\n                    <Button\r\n                    type=\"submit\"\r\n                    size=\"large\"\r\n                    onClick={handleFormSubmit}\r\n                    ><SearchIcon />\r\n                    </Button>\r\n                </form> \r\n            </div>\r\n\r\n            {!click ? (\r\n                    <div className=\"text\">Search Weather Anywhere</div>\r\n            ) : null}\r\n            \r\n            {click ? (\r\n                    <Chart data={data} />\r\n            ) : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Forecast;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AppBar, Toolbar } from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport CloudIcon from \"@material-ui/icons/Cloud\";\r\nimport MapIcon from \"@material-ui/icons/Explore\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nfunction Nav(){\r\n    return(\r\n        <AppBar style={{background:\"#004256\"}} position=\"fixed\">\r\n            <Toolbar>\r\n            <Link className=\"link\" to=\"/\">\r\n                    <HomeIcon />\r\n                </Link>\r\n\r\n                <Link className=\"link\" to=\"/map\">\r\n                    <MapIcon />\r\n                </Link>\r\n\r\n                <Link className=\"link\" to=\"/weather\">\r\n                    <CloudIcon />\r\n                </Link>\r\n            </Toolbar>\r\n        </AppBar>  \r\n    )\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nfunction Home(){\r\n    return (\r\n        <div style={{paddingTop: 68}}>\r\n\r\n            <Link className=\"language\" to=\"/ch\">中文</Link>\r\n\r\n            <div className=\"title\">København</div>\r\n\r\n            <div className=\"subtext\"><Link className=\"textLink\" to=\"/map\">Discover</Link> locations of bicycle paths, waste bins, local libraries，and hourly <Link className=\"textLink\" to=\"/weather\">weather</Link></div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState, useCallback } from \"react\";\r\nimport ReactMapGL, { Source, Layer, Marker, Popup } from \"react-map-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\nimport \"./Map.css\";\r\nimport * as trashData from \"../data/trash.json\";\r\nimport * as libraryData from \"../data/library.json\";\r\nimport * as cycleData from \"../data/cycle.json\";\r\nimport { Button } from \"@material-ui/core\"\r\nimport { DirectionsBike, Delete, LocalLibrary } from \"@material-ui/icons\";\r\n\r\nconst MAPBOX_TOKEN = \"pk.eyJ1Ijoic2FyYWhzaGVhMTIiLCJhIjoiY2toZmxuaDM4MHFvdzJwcXBxbDd0cnF0MyJ9.kkp2ulqhOdhgwysy05DlOA\"\r\n\r\nfunction Map(){\r\n\r\n    // view for the map\r\n    const [viewport, setViewport] = useState({\r\n        width: 600,\r\n        height: 600,\r\n        latitude: 55.6761,\r\n        longitude: 12.5683,\r\n        zoom: 12\r\n    });\r\n\r\n    // method for displaying the trashcan layer on the map when clicked\r\n    const [trashIsToggled, setTrashIsToggled] = useState(false);\r\n    const trashToggle = useCallback(() => setTrashIsToggled(!trashIsToggled));\r\n\r\n    // method from displaying the cycling data\r\n    const [bikeIsToggled, setBikeIsToggled] = useState(false);\r\n    const bikeToggle = useCallback(() => setBikeIsToggled(!bikeIsToggled));\r\n\r\n    // method from displaying the library data\r\n    const [libIsToggled, setLibIsToggled] = useState(false);\r\n    const libToggle = useCallback(() => setLibIsToggled(!libIsToggled));\r\n\r\n    // state of the library that is clicked on to return the corresponding popup\r\n    const [selectedLib, setSelectedLib] = useState(null);\r\n\r\n    return (\r\n    <div className=\"map\" style={{paddingTop: 68}}>\r\n        <ReactMapGL \r\n        {...viewport}\r\n        width=\"98vw\"\r\n        height=\"92vh\"\r\n        mapboxApiAccessToken={MAPBOX_TOKEN}\r\n        mapStyle=\"mapbox://styles/sarahshea12/ckhilnhdj0j8019noz4pvtd33\"\r\n        onViewportChange = {nextViewport => setViewport(nextViewport)}\r\n        >\r\n        \r\n        <button className=\"mapButton\" onClick={trashToggle}><Delete /></button>\r\n        {trashIsToggled ? (\r\n            <Source type=\"geojson\" data={trashData.default}>\r\n                <Layer \r\n                    id=\"circle\"\r\n                    type=\"circle\"\r\n                    paint={{\r\n                        \"circle-radius\": 3,\r\n                        \"circle-color\": \"#6f6f6f\"\r\n                    }}>\r\n                </Layer>\r\n            </Source> \r\n        ) : null}\r\n        \r\n        <button className=\"mapButton\" onClick={libToggle}><LocalLibrary /></button>\r\n        {libIsToggled ? (\r\n        libraryData.default.features.map((lib) => (\r\n        <Marker\r\n            latitude={lib.geometry.coordinates[1]}\r\n            longitude={lib.geometry.coordinates[0]}\r\n            offsetLeft={-20} offsetTop={-10}>\r\n                <Button \r\n                onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setSelectedLib(lib);\r\n                    }}>{<LocalLibrary />}\r\n                </Button>\r\n        </Marker> \r\n        ))\r\n        ) : null}\r\n\r\n        {selectedLib ? (\r\n            <Popup \r\n                latitude={selectedLib.geometry.coordinates[1]}\r\n                longitude={selectedLib.geometry.coordinates[0]}\r\n                onClose={() => {\r\n                    setSelectedLib(null);\r\n                }}\r\n                >\r\n                <div>\r\n                    <h4>{selectedLib.properties.navn}</h4>\r\n                    <h4>{selectedLib.properties.adresse}</h4>\r\n                    <h4>DK-{selectedLib.properties.post_nr}, {selectedLib.properties.postdistrikt}</h4>\r\n                </div>\r\n            </Popup>\r\n        ) : null}\r\n\r\n        <button className=\"mapButton\" onClick={bikeToggle}><DirectionsBike /></button>\r\n        {bikeIsToggled ? (\r\n            <Source type=\"geojson\" data={cycleData.default}>\r\n                <Layer \r\n                    id=\"line\"\r\n                    type=\"line\"\r\n                    layout= {{\r\n                        \"line-cap\": \"round\",\r\n                        \"line-join\": \"round\",\r\n                    }}\r\n                    paint= {{\r\n                        \"line-color\": \"#e6d15e\",\r\n                        \"line-width\": 3\r\n                    }}>\r\n                </Layer>\r\n            </Source> \r\n        ) : null}\r\n        \r\n        </ReactMapGL>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Map;","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nfunction HomeCH() {\r\n    return (\r\n        <div style={{paddingTop: 68}}>\r\n    \r\n            <Link className=\"language\" to=\"/\">EN</Link>\r\n\r\n            <div className=\"title\">哥本哈根</div>\r\n\r\n            <div className=\"subtext\">查看自行車道地圖，垃圾桶分佈，圖書館分佈，每小時天氣信息</div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeCH;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Forecast from \"./pages/Forecast/Forecast\";\nimport Nav from \"./components/Navbar/Navbar\";\nimport Home from \"./pages/Home/Home\";\nimport Map from \"./components/Map/Map\";\nimport HomeCH from \"./pages/Home/HomeCH\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction App() {\n  return (\n    <div>\n      <Router basename=\"/explore-copenhagen\">\n        <div>\n          <Paper><Nav /></Paper>\n        </div>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" render={() => (\n              <Home />\n            )}>\n            </Route>\n\n            <Route exact path=\"/ch\" render={() => (\n              <HomeCH />\n            )}>\n            </Route>\n\n            <Route exact path=\"/map\" render={() => (\n              <Map />\n            )}>\n            </Route>\n\n            <Route exact path=\"/weather\" render={() => (\n              <Forecast />\n            )}>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport WebFont from \"webfontloader\";\n\nWebFont.load({\n    google: {\n        families: ['Titillium Web:300,400,700', 'sans-serif']\n    }\n})\n\nReactDOM.render(\n<App />, document.getElementById('root')\n);\n\n\n  \n"],"sourceRoot":""}